
------------------------------------
Fri Feb 28 22:40:14 2020
(array([0.95427566, 0.52544208]), array([0.94660332, 0.56587641]), array([0.95042401, 0.54491018]), array([24627,  2573]))

<bound method XGBModel.get_params of XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.005, max_delta_step=0, max_depth=4,
              min_child_weight=1, missing=None, n_estimators=2000, n_jobs=1,
              nthread=None, objective='binary:logistic',
              predictor='gpu_predictor', random_state=12, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=9.738255033557047, seed=None,
              silent=None, subsample=1, tree_method='gpu_hist', verbosity=1)>
------------------------------------
Fri Feb 28 22:40:58 2020
(array([0.95367737, 0.55328185]), array([0.95301904, 0.55693743]), array([0.95334809, 0.55510362]), array([24627,  2573]))

<bound method XGBModel.get_params of XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.005, max_delta_step=0, max_depth=6,
              min_child_weight=1, missing=None, n_estimators=2000, n_jobs=1,
              nthread=None, objective='binary:logistic',
              predictor='gpu_predictor', random_state=12, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=9.738255033557047, seed=None,
              silent=None, subsample=1, tree_method='gpu_hist', verbosity=1)>
------------------------------------
Fri Feb 28 22:41:53 2020
(array([0.95352944, 0.62034196]), array([0.96483534, 0.5499417 ]), array([0.95914907, 0.58302431]), array([24627,  2573]))

<bound method XGBModel.get_params of XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.005, max_delta_step=0, max_depth=8,
              min_child_weight=1, missing=None, n_estimators=2000, n_jobs=1,
              nthread=None, objective='binary:logistic',
              predictor='gpu_predictor', random_state=12, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=9.738255033557047, seed=None,
              silent=None, subsample=1, tree_method='gpu_hist', verbosity=1)>
------------------------------------
Fri Feb 28 22:43:44 2020
(array([0.94929412, 0.75294118]), array([0.98294555, 0.49747377]), array([0.9658268, 0.5991107]), array([24627,  2573]))

<bound method XGBModel.get_params of XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.005, max_delta_step=0, max_depth=12,
              min_child_weight=1, missing=None, n_estimators=2000, n_jobs=1,
              nthread=None, objective='binary:logistic',
              predictor='gpu_predictor', random_state=12, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=9.738255033557047, seed=None,
              silent=None, subsample=1, tree_method='gpu_hist', verbosity=1)>
------------------------------------
Fri Feb 28 22:47:19 2020
(array([0.94611568, 0.84259259]), array([0.99102611, 0.45977458]), array([0.96805029, 0.59492079]), array([24627,  2573]))

<bound method XGBModel.get_params of XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.005, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=None, n_estimators=2000, n_jobs=1,
              nthread=None, objective='binary:logistic',
              predictor='gpu_predictor', random_state=12, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=9.738255033557047, seed=None,
              silent=None, subsample=1, tree_method='gpu_hist', verbosity=1)>
------------------------------------
Fri Feb 28 23:19:52 2020
(array([0.94357984, 0.85210728]), array([0.99216307, 0.43218033]), array([0.96726179, 0.57349149]), array([24627,  2573]))

<bound method XGBModel.get_params of XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.005, max_delta_step=0, max_depth=17,
              min_child_weight=1, missing=None, n_estimators=2000, n_jobs=1,
              nthread=None, objective='binary:logistic',
              predictor='gpu_predictor', random_state=12, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=9.738255033557047, seed=None,
              silent=None, subsample=1, tree_method='gpu_hist', verbosity=1)>
------------------------------------
Fri Feb 28 23:26:36 2020
(array([0.94579338, 0.87649701]), array([0.99330004, 0.45511077]), array([0.96896477, 0.59913021]), array([24627,  2573]))

<bound method XGBModel.get_params of XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.005, max_delta_step=0, max_depth=20,
              min_child_weight=1, missing=None, n_estimators=2000, n_jobs=1,
              nthread=None, objective='binary:logistic',
              predictor='gpu_predictor', random_state=12, reg_alpha=0,
              reg_lambda=1, scale_pos_weight=9.738255033557047, seed=None,
              silent=None, subsample=1, tree_method='gpu_hist', verbosity=1)>